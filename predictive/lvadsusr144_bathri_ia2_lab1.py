# -*- coding: utf-8 -*-
"""LVADSUSR144_BATHRI_IA2_LAB1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vpv8w7nlUb_orRYKCzx4UiSyGkt0xHKd
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score,precision_score,recall_score,confusion_matrix,classification_report
from sklearn.preprocessing import LabelEncoder,MinMaxScaler

data = pd.read_csv("/content/winequality-red (1).csv")
data.head()

data.isnull().sum()
data.shape
data.dropna(inplace=True)
data.shape

data.duplicated().sum()
data.drop_duplicates(inplace=True)

#outliers

data = data[data['fixed acidity']<12]
plt.boxplot(data['fixed acidity'])

plt.boxplot(data)

data = data[data['volatile acidity']<1.0]
plt.boxplot(data['volatile acidity'])

data = data[data['alcohol']<13.3]

data = data[data['volatile acidity']<1.0]

data = data[data['citric acid']<=0.8]

data = data[data['residual sugar']<4]

data = data[data['chlorides']<0.11]
data = data[data['chlorides']>0.04]

data.loc[data['quality'] <= 6, 'quality'] = 0
data.loc[data['quality'] > 6, 'quality'] = 1

x = data.drop(columns = ['quality'])
y = data['quality']
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3)
model = RandomForestClassifier(n_estimators=100,random_state=42)
model.fit(x_train,y_train)
y_pred = model.predict(x_test)
print("Accuracy:",round(accuracy_score(y_test,y_pred)*100,2))
prec = precision_score(y_test, y_pred)
print("Precision:", round(prec*100,2),"%")
recall = recall_score(y_test, y_pred)
print("Recall:", round(recall*100,2),"%")
print("confusion matrix:\n",confusion_matrix(y_test,y_pred))
print("CR:\n",classification_report(y_test,y_pred))